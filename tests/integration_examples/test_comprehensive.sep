// Comprehensive test of modulo and vector features
pattern comprehensive_test {
    // Test modulo with various numbers
    mod1 = 17 % 5
    mod2 = 20 % 6
    mod3 = 7 % 3
    print("17 % 5 =", mod1)
    print("20 % 6 =", mod2)
    print("7 % 3 =", mod3)
    
    // Test vectors
    v1 = vec2(3, 4)
    v2 = vec3(1, 0, 0)
    v3 = vec4(1, 2, 3, 4)
    
    // Test vector math
    len1 = length(v1)
    len2 = length(v2)
    len3 = length(v3)
    
    print("length(vec2(3,4)) =", len1)
    print("length(vec3(1,0,0)) =", len2)
    print("length(vec4(1,2,3,4)) =", len3)
    
    // Test dot product with same dimensions
    v2a = vec2(1, 1)
    v2b = vec2(2, 3)
    dot_result = dot(v2a, v2b)
    print("dot(vec2(1,1), vec2(2,3)) =", dot_result)
    
    // Test normalization  
    unit_x = vec3(5, 0, 0)
    unit_x_len = length(unit_x)
    print("Before normalize: length =", unit_x_len)
    
    // Test with modulo in complex expression
    complex_expr = (17 % 5) + (20 % 6)
    print("(17 % 5) + (20 % 6) =", complex_expr)
}
