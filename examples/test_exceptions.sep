// Test exception handling with try/catch/finally

pattern test_exceptions {
    try {
        x = 10
        y = 0
        // This should work fine
        result = x * 2
    }
    catch (error) {
        error_message = "Caught error: " + error
    }
    finally {
        cleanup_message = "Cleanup completed"
    }
}

// Test throwing exceptions
function throwingFunction() {
    try {
        value = 42
        throw "Something went wrong!"
        return value  // This won't be reached
    }
    catch (e) {
        caught_value = e
        return "Error handled: " + e
    }
}

// Test nested try/catch
pattern nested_exceptions {
    try {
        try {
            inner_result = throwingFunction()
            throw "Outer exception"
        }
        catch (inner_error) {
            outer_message = "Inner caught: " + inner_error
            throw "Re-throwing from inner"
        }
    }
    catch (outer_error) {
        final_message = "Outer caught: " + outer_error
    }
    finally {
        final_cleanup = "All done"
    }
}
